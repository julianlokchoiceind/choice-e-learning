"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_services_achievements_ts";
exports.ids = ["_rsc_src_services_achievements_ts"];
exports.modules = {

/***/ "(rsc)/./src/services/achievements.ts":
/*!**************************************!*\
  !*** ./src/services/achievements.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAndAwardAchievements: () => (/* binding */ checkAndAwardAchievements),\n/* harmony export */   createAchievement: () => (/* binding */ createAchievement),\n/* harmony export */   getUserAchievements: () => (/* binding */ getUserAchievements)\n/* harmony export */ });\n/* harmony import */ var private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-proxy */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-proxy.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! private-next-rsc-action-encryption */ \"(rsc)/./node_modules/next/dist/server/app-render/action-encryption.js\");\n/* harmony import */ var private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(private_next_rsc_action_encryption__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./src/lib/db.ts\");\n/* harmony import */ var _lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/db/prisma-helper */ \"(rsc)/./src/lib/db/prisma-helper.ts\");\n/* harmony import */ var _types_achievement__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/types/achievement */ \"(rsc)/./src/types/achievement/index.ts\");\n/* harmony import */ var private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! private-next-rsc-action-validate */ \"(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-validate.js\");\n/* __next_internal_action_entry_do_not_use__ {\"346d3948bb54496414ac11ffe007a95bcc0ada67\":\"getUserAchievements\",\"bc267e40bccb015e6b0a6920c9226658810c2a22\":\"checkAndAwardAchievements\",\"d19bb8b7980f79348c3a6a62c6c3b436873341b7\":\"createAchievement\"} */ \n\n\n\n\n/**\n * Get all achievements for a user\n */ async function getUserAchievements(userId) {\n    try {\n        if (!userId) {\n            console.warn(\"getUserAchievements called with empty userId\");\n            return [];\n        }\n        // Use safeFindMany instead of direct prisma call\n        const achievements = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeFindMany)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].achievement, {\n            where: {\n                userId\n            }\n        });\n        if (!achievements || !Array.isArray(achievements)) {\n            console.warn(\"No achievements found or invalid response format\");\n            return [];\n        }\n        return achievements.map((achievement)=>({\n                id: achievement.id,\n                userId: achievement.userId,\n                title: achievement.title,\n                description: achievement.description,\n                icon: achievement.icon,\n                earnedAt: achievement.earnedAt,\n                type: achievement.type\n            }));\n    } catch (error) {\n        console.error(\"Error fetching user achievements:\", error);\n        return [];\n    }\n}\n/**\n * Create a new achievement for a user\n */ async function createAchievement(userId, type, title, description, icon) {\n    try {\n        if (!userId || !type) {\n            console.warn(\"createAchievement called with missing parameters\");\n            return null;\n        }\n        // Check if user already has this achievement using safeFindFirst\n        const existingAchievement = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeFindFirst)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].achievement, {\n            where: {\n                userId,\n                type\n            }\n        });\n        if (existingAchievement) {\n            // User already has this achievement, return it\n            return {\n                id: existingAchievement.id,\n                userId: existingAchievement.userId,\n                title: existingAchievement.title,\n                description: existingAchievement.description,\n                icon: existingAchievement.icon,\n                earnedAt: existingAchievement.earnedAt,\n                type: existingAchievement.type\n            };\n        }\n        // Create new achievement using safeCreate\n        const now = new Date();\n        const achievement = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeCreate)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].achievement, {\n            data: {\n                userId,\n                type,\n                title,\n                description,\n                icon,\n                earnedAt: now\n            }\n        });\n        return {\n            id: achievement.id,\n            userId,\n            title,\n            description,\n            icon,\n            earnedAt: now,\n            type\n        };\n    } catch (error) {\n        console.error(\"Error creating achievement:\", error);\n        return null;\n    }\n}\n/**\n * Check and award achievements for a user\n */ async function checkAndAwardAchievements(userId) {\n    try {\n        // Use safeFindUnique instead of direct prisma call\n        const user = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeFindUnique)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].user, {\n            where: {\n                id: userId\n            },\n            include: {\n                enrolledIn: true\n            }\n        });\n        if (!user) {\n            return [];\n        }\n        const newAchievements = [];\n        // First login achievement\n        const firstLoginAchievement = await createAchievement(userId, _types_achievement__WEBPACK_IMPORTED_MODULE_4__.AchievementType.FIRST_LOGIN, \"First Login\", \"You logged into the platform for the first time.\", \"login\");\n        if (firstLoginAchievement) {\n            newAchievements.push(firstLoginAchievement);\n        }\n        // Check for course started achievement\n        if (user.enrolledIn && user.enrolledIn.length > 0) {\n            const courseStartedAchievement = await createAchievement(userId, _types_achievement__WEBPACK_IMPORTED_MODULE_4__.AchievementType.COURSE_STARTED, \"Course Starter\", \"You enrolled in your first course.\", \"course\");\n            if (courseStartedAchievement) {\n                newAchievements.push(courseStartedAchievement);\n            }\n        }\n        // Check for course completion achievement\n        const userProgress = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeFindMany)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].userProgress, {\n            where: {\n                userId\n            }\n        });\n        if (userProgress.length > 0) {\n            // Get all courses enrolled in\n            const enrolledCourseIds = user.enrolledIds || [];\n            // Get all lessons for these courses using safeFindMany\n            const lessons = await (0,_lib_db_prisma_helper__WEBPACK_IMPORTED_MODULE_3__.safeFindMany)(_lib_db__WEBPACK_IMPORTED_MODULE_2__[\"default\"].lesson, {\n                where: {\n                    courseId: {\n                        in: enrolledCourseIds\n                    }\n                }\n            });\n            // Group lessons by courseId\n            const courseLessons = {};\n            if (lessons && Array.isArray(lessons)) {\n                for (const lesson of lessons){\n                    if (!courseLessons[lesson.courseId]) {\n                        courseLessons[lesson.courseId] = 0;\n                    }\n                    courseLessons[lesson.courseId]++;\n                }\n            }\n            // Count completed lessons per course\n            const courseProgress = {};\n            if (userProgress && Array.isArray(userProgress)) {\n                for (const progress of userProgress){\n                    if (progress.completed) {\n                        if (!courseProgress[progress.courseId]) {\n                            courseProgress[progress.courseId] = 0;\n                        }\n                        courseProgress[progress.courseId]++;\n                    }\n                }\n            }\n            // Check if any course is completed\n            for (const [courseId, completedCount] of Object.entries(courseProgress)){\n                const totalLessons = courseLessons[courseId] || 0;\n                if (totalLessons > 0 && completedCount >= totalLessons) {\n                    const courseCompletedAchievement = await createAchievement(userId, _types_achievement__WEBPACK_IMPORTED_MODULE_4__.AchievementType.COURSE_COMPLETED, \"Course Completer\", \"You completed your first course.\", \"certificate\");\n                    if (courseCompletedAchievement) {\n                        newAchievements.push(courseCompletedAchievement);\n                    }\n                    break; // Only need one course completed for the achievement\n                }\n            }\n            // Quick Learner achievement - X lessons in Y days\n            const completedLessons = userProgress && Array.isArray(userProgress) ? userProgress.filter((p)=>p.completed) : [];\n            const completedLessonCount = completedLessons.length;\n            if (completedLessonCount >= 10) {\n                const completedDates = completedLessons.filter((p)=>p.completedAt).map((p)=>p.completedAt).sort((a, b)=>a.getTime() - b.getTime());\n                if (completedDates.length > 0) {\n                    const firstCompletionDate = completedDates[0];\n                    const daysSinceFirstCompletion = Math.floor((Date.now() - firstCompletionDate.getTime()) / (1000 * 60 * 60 * 24));\n                    if (daysSinceFirstCompletion <= 7) {\n                        const quickLearnerAchievement = await createAchievement(userId, _types_achievement__WEBPACK_IMPORTED_MODULE_4__.AchievementType.QUICK_LEARNER, \"Quick Learner\", \"You completed 10 lessons within a week.\", \"speed\");\n                        if (quickLearnerAchievement) {\n                            newAchievements.push(quickLearnerAchievement);\n                        }\n                    }\n                }\n            }\n        }\n        // Note: For streak achievement, we'd need to modify the User model to include loginHistory\n        // This is currently not in the Prisma schema, so it's omitted from the refactored version\n        return newAchievements;\n    } catch (error) {\n        console.error(\"Error checking and awarding achievements:\", error);\n        return [];\n    }\n}\n\n(0,private_next_rsc_action_validate__WEBPACK_IMPORTED_MODULE_5__.ensureServerEntryExports)([\n    getUserAchievements,\n    createAchievement,\n    checkAndAwardAchievements\n]);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"346d3948bb54496414ac11ffe007a95bcc0ada67\", getUserAchievements);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"d19bb8b7980f79348c3a6a62c6c3b436873341b7\", createAchievement);\n(0,private_next_rsc_action_proxy__WEBPACK_IMPORTED_MODULE_0__.createActionProxy)(\"bc267e40bccb015e6b0a6920c9226658810c2a22\", checkAndAwardAchievements);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/achievements.ts\n");

/***/ }),

/***/ "(rsc)/./src/types/achievement/index.ts":
/*!****************************************!*\
  !*** ./src/types/achievement/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AchievementType: () => (/* binding */ AchievementType)\n/* harmony export */ });\n/**\n * @file Achievement type definitions\n * @description Type definitions for user achievements\n */ /**\n * Achievement types enum\n * @enum {string}\n */ var AchievementType;\n(function(AchievementType) {\n    AchievementType[\"FIRST_LOGIN\"] = \"first_login\";\n    AchievementType[\"COURSE_STARTED\"] = \"course_started\";\n    AchievementType[\"COURSE_COMPLETED\"] = \"course_completed\";\n    AchievementType[\"LESSON_COMPLETED\"] = \"lesson_completed\";\n    AchievementType[\"STREAK\"] = \"streak\";\n    AchievementType[\"QUICK_LEARNER\"] = \"quick_learner\";\n})(AchievementType || (AchievementType = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvdHlwZXMvYWNoaWV2ZW1lbnQvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUVEOzs7Q0FHQztVQUNXQTs7Ozs7OztHQUFBQSxvQkFBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jaG9pY2UtZS1sZWFybmluZy8uL3NyYy90eXBlcy9hY2hpZXZlbWVudC9pbmRleC50cz8wNzI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgQWNoaWV2ZW1lbnQgdHlwZSBkZWZpbml0aW9uc1xuICogQGRlc2NyaXB0aW9uIFR5cGUgZGVmaW5pdGlvbnMgZm9yIHVzZXIgYWNoaWV2ZW1lbnRzXG4gKi9cblxuLyoqXG4gKiBBY2hpZXZlbWVudCB0eXBlcyBlbnVtXG4gKiBAZW51bSB7c3RyaW5nfVxuICovXG5leHBvcnQgZW51bSBBY2hpZXZlbWVudFR5cGUge1xuICBGSVJTVF9MT0dJTiA9ICdmaXJzdF9sb2dpbicsXG4gIENPVVJTRV9TVEFSVEVEID0gJ2NvdXJzZV9zdGFydGVkJyxcbiAgQ09VUlNFX0NPTVBMRVRFRCA9ICdjb3Vyc2VfY29tcGxldGVkJyxcbiAgTEVTU09OX0NPTVBMRVRFRCA9ICdsZXNzb25fY29tcGxldGVkJyxcbiAgU1RSRUFLID0gJ3N0cmVhaycsXG4gIFFVSUNLX0xFQVJORVIgPSAncXVpY2tfbGVhcm5lcicsXG59XG5cbi8qKlxuICogVXNlciBhY2hpZXZlbWVudCBpbnRlcmZhY2VcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBVc2VyQWNoaWV2ZW1lbnQge1xuICBpZDogc3RyaW5nO1xuICB1c2VySWQ6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgaWNvbjogc3RyaW5nO1xuICBlYXJuZWRBdDogRGF0ZTtcbiAgdHlwZTogQWNoaWV2ZW1lbnRUeXBlO1xufVxuXG4vKipcbiAqIENyZWF0ZSBhY2hpZXZlbWVudCBwYXJhbWV0ZXJzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ3JlYXRlQWNoaWV2ZW1lbnRQYXJhbXMge1xuICB1c2VySWQ6IHN0cmluZztcbiAgdHlwZTogQWNoaWV2ZW1lbnRUeXBlO1xuICB0aXRsZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBpY29uOiBzdHJpbmc7XG59XG4iXSwibmFtZXMiOlsiQWNoaWV2ZW1lbnRUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/types/achievement/index.ts\n");

/***/ })

};
;