"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/courses/add/page",{

/***/ "(app-pages-browser)/./src/lib/db/prisma-client.ts":
/*!*************************************!*\
  !*** ./src/lib/db/prisma-client.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"(app-pages-browser)/./node_modules/@prisma/client/index-browser.js\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Maximum number of retries for database operations\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY_MS = 200;\n// Helper function to add delay\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n// Create a singleton Prisma Client instance\nfunction createPrismaClient() {\n    try {\n        const client = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n            log:  true ? [\n                \"query\",\n                \"error\",\n                \"warn\"\n            ] : 0\n        });\n        // Add middleware for error handling and retry logic\n        client.$use(async (params, next)=>{\n            let retries = 0;\n            while(true){\n                try {\n                    return await next(params);\n                } catch (error) {\n                    // Log the error\n                    console.error(\"Prisma Client Error in \".concat(params.model, \".\").concat(params.action, \":\"), error);\n                    // Check if we should retry\n                    if (retries < MAX_RETRIES && isPrismaRetryableError(error)) {\n                        retries++;\n                        ;\n                        // Add exponential backoff\n                        await delay(RETRY_DELAY_MS * Math.pow(2, retries - 1));\n                        continue;\n                    }\n                    // If we reach here, we've exceeded retries or error is not retryable\n                    throw error;\n                }\n            }\n        });\n        // Test connection and log success\n        client.$connect().then(()=>console.log(\"Database connection established successfully\")).catch((e)=>console.error(\"Failed to connect to database:\", e));\n        return client;\n    } catch (e) {\n        console.error(\"Error creating Prisma client:\", e);\n        throw e;\n    }\n}\n// Check if an error is retryable\nfunction isPrismaRetryableError(error) {\n    var _error_message, _error_message1;\n    // Network errors\n    if (error.code === \"P1001\" || error.code === \"P1002\") return true;\n    // Connection errors\n    if (error.code === \"P1008\" || error.code === \"P1011\") return true;\n    // Timeout errors\n    if (error.code === \"P1009\") return true;\n    // MongoDB transient errors\n    if ((_error_message = error.message) === null || _error_message === void 0 ? void 0 : _error_message.includes(\"MongoNetworkError\")) return true;\n    if ((_error_message1 = error.message) === null || _error_message1 === void 0 ? void 0 : _error_message1.includes(\"MongoServerSelectionError\")) return true;\n    return false;\n}\n// Ensure we only create the client once\nlet prismaInstance;\nif (false) {} else {\n    // Use global in development to avoid duplicates during hot reloading\n    if (!__webpack_require__.g.prisma) {\n        __webpack_require__.g.prisma = createPrismaClient();\n    }\n    prismaInstance = __webpack_require__.g.prisma;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (prismaInstance);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvZGIvcHJpc21hLWNsaWVudC50cyIsIm1hcHBpbmdzIjoiOzs7QUFBOEM7QUFFOUMsb0RBQW9EO0FBQ3BELE1BQU1DLGNBQWM7QUFDcEIsTUFBTUMsaUJBQWlCO0FBT3ZCLCtCQUErQjtBQUMvQixNQUFNQyxRQUFRLENBQUNDLEtBQWUsSUFBSUMsUUFBUUMsQ0FBQUEsVUFBV0MsV0FBV0QsU0FBU0Y7QUFFekUsNENBQTRDO0FBQzVDLFNBQVNJO0lBQ1AsSUFBSTtRQUNGLE1BQU1DLFNBQVMsSUFBSVQsd0RBQVlBLENBQUM7WUFDOUJVLEtBQUtDLEtBQXlCLEdBQWdCO2dCQUFDO2dCQUFTO2dCQUFTO2FBQU8sR0FBRyxDQUFTO1FBQ3RGO1FBRUEsb0RBQW9EO1FBQ3BERixPQUFPRyxJQUFJLENBQUMsT0FBT0MsUUFBUUM7WUFDekIsSUFBSUMsVUFBVTtZQUVkLE1BQU8sS0FBTTtnQkFDWCxJQUFJO29CQUNGLE9BQU8sTUFBTUQsS0FBS0Q7Z0JBQ3BCLEVBQUUsT0FBT0csT0FBWTtvQkFDbkIsZ0JBQWdCO29CQUNoQkMsUUFBUUQsS0FBSyxDQUFDLDBCQUEwQ0gsT0FBaEJBLE9BQU9LLEtBQUssRUFBQyxLQUFpQixPQUFkTCxPQUFPTSxNQUFNLEVBQUMsTUFBSUg7b0JBRTFFLDJCQUEyQjtvQkFDM0IsSUFBSUQsVUFBVWQsZUFBZW1CLHVCQUF1QkosUUFBUTt3QkFDMUREOzt3QkFHQSwwQkFBMEI7d0JBQzFCLE1BQU1aLE1BQU1ELGlCQUFpQm1CLEtBQUtDLEdBQUcsQ0FBQyxHQUFHUCxVQUFVO3dCQUNuRDtvQkFDRjtvQkFFQSxxRUFBcUU7b0JBQ3JFLE1BQU1DO2dCQUNSO1lBQ0Y7UUFDRjtRQUVBLGtDQUFrQztRQUNsQ1AsT0FBT2MsUUFBUSxHQUNaQyxJQUFJLENBQUMsSUFBTVAsUUFBUVAsR0FBRyxDQUFDLGlEQUN2QmUsS0FBSyxDQUFDLENBQUNDLElBQU1ULFFBQVFELEtBQUssQ0FBQyxrQ0FBa0NVO1FBRWhFLE9BQU9qQjtJQUNULEVBQUUsT0FBT2lCLEdBQUc7UUFDVlQsUUFBUUQsS0FBSyxDQUFDLGlDQUFpQ1U7UUFDL0MsTUFBTUE7SUFDUjtBQUNGO0FBRUEsaUNBQWlDO0FBQ2pDLFNBQVNOLHVCQUF1QkosS0FBVTtRQVdwQ0EsZ0JBQ0FBO0lBWEosaUJBQWlCO0lBQ2pCLElBQUlBLE1BQU1XLElBQUksS0FBSyxXQUFXWCxNQUFNVyxJQUFJLEtBQUssU0FBUyxPQUFPO0lBRTdELG9CQUFvQjtJQUNwQixJQUFJWCxNQUFNVyxJQUFJLEtBQUssV0FBV1gsTUFBTVcsSUFBSSxLQUFLLFNBQVMsT0FBTztJQUU3RCxpQkFBaUI7SUFDakIsSUFBSVgsTUFBTVcsSUFBSSxLQUFLLFNBQVMsT0FBTztJQUVuQywyQkFBMkI7SUFDM0IsS0FBSVgsaUJBQUFBLE1BQU1ZLE9BQU8sY0FBYloscUNBQUFBLGVBQWVhLFFBQVEsQ0FBQyxzQkFBc0IsT0FBTztJQUN6RCxLQUFJYixrQkFBQUEsTUFBTVksT0FBTyxjQUFiWixzQ0FBQUEsZ0JBQWVhLFFBQVEsQ0FBQyw4QkFBOEIsT0FBTztJQUVqRSxPQUFPO0FBQ1Q7QUFFQSx3Q0FBd0M7QUFDeEMsSUFBSUM7QUFFSixJQUFJbkIsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0wscUVBQXFFO0lBQ3JFLElBQUksQ0FBQ29CLHFCQUFNQSxDQUFDQyxNQUFNLEVBQUU7UUFDbEJELHFCQUFNQSxDQUFDQyxNQUFNLEdBQUd4QjtJQUNsQjtJQUNBc0IsaUJBQWlCQyxxQkFBTUEsQ0FBQ0MsTUFBTTtBQUNoQztBQUVBLCtEQUFlRixjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvZGIvcHJpc21hLWNsaWVudC50cz8zOGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByaXNtYUNsaWVudCB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcblxuLy8gTWF4aW11bSBudW1iZXIgb2YgcmV0cmllcyBmb3IgZGF0YWJhc2Ugb3BlcmF0aW9uc1xuY29uc3QgTUFYX1JFVFJJRVMgPSAzO1xuY29uc3QgUkVUUllfREVMQVlfTVMgPSAyMDA7XG5cbi8vIFByZXZlbnQgbXVsdGlwbGUgaW5zdGFuY2VzIG9mIFByaXNtYSBDbGllbnQgaW4gZGV2ZWxvcG1lbnRcbmRlY2xhcmUgZ2xvYmFsIHtcbiAgdmFyIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gYWRkIGRlbGF5XG5jb25zdCBkZWxheSA9IChtczogbnVtYmVyKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcblxuLy8gQ3JlYXRlIGEgc2luZ2xldG9uIFByaXNtYSBDbGllbnQgaW5zdGFuY2VcbmZ1bmN0aW9uIGNyZWF0ZVByaXNtYUNsaWVudCgpOiBQcmlzbWFDbGllbnQge1xuICB0cnkge1xuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBQcmlzbWFDbGllbnQoe1xuICAgICAgbG9nOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyA/IFsncXVlcnknLCAnZXJyb3InLCAnd2FybiddIDogWydlcnJvciddLFxuICAgIH0pO1xuICAgIFxuICAgIC8vIEFkZCBtaWRkbGV3YXJlIGZvciBlcnJvciBoYW5kbGluZyBhbmQgcmV0cnkgbG9naWNcbiAgICBjbGllbnQuJHVzZShhc3luYyAocGFyYW1zLCBuZXh0KSA9PiB7XG4gICAgICBsZXQgcmV0cmllcyA9IDA7XG4gICAgICBcbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmV0dXJuIGF3YWl0IG5leHQocGFyYW1zKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgICAgIC8vIExvZyB0aGUgZXJyb3JcbiAgICAgICAgICBjb25zb2xlLmVycm9yKGBQcmlzbWEgQ2xpZW50IEVycm9yIGluICR7cGFyYW1zLm1vZGVsfS4ke3BhcmFtcy5hY3Rpb259OmAsIGVycm9yKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBDaGVjayBpZiB3ZSBzaG91bGQgcmV0cnlcbiAgICAgICAgICBpZiAocmV0cmllcyA8IE1BWF9SRVRSSUVTICYmIGlzUHJpc21hUmV0cnlhYmxlRXJyb3IoZXJyb3IpKSB7XG4gICAgICAgICAgICByZXRyaWVzKys7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgUmV0cnlpbmcgb3BlcmF0aW9uIChhdHRlbXB0ICR7cmV0cmllc30vJHtNQVhfUkVUUklFU30pLi4uYCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIEFkZCBleHBvbmVudGlhbCBiYWNrb2ZmXG4gICAgICAgICAgICBhd2FpdCBkZWxheShSRVRSWV9ERUxBWV9NUyAqIE1hdGgucG93KDIsIHJldHJpZXMgLSAxKSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gSWYgd2UgcmVhY2ggaGVyZSwgd2UndmUgZXhjZWVkZWQgcmV0cmllcyBvciBlcnJvciBpcyBub3QgcmV0cnlhYmxlXG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgICBcbiAgICAvLyBUZXN0IGNvbm5lY3Rpb24gYW5kIGxvZyBzdWNjZXNzXG4gICAgY2xpZW50LiRjb25uZWN0KClcbiAgICAgIC50aGVuKCgpID0+IGNvbnNvbGUubG9nKCdEYXRhYmFzZSBjb25uZWN0aW9uIGVzdGFibGlzaGVkIHN1Y2Nlc3NmdWxseScpKVxuICAgICAgLmNhdGNoKChlKSA9PiBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gY29ubmVjdCB0byBkYXRhYmFzZTonLCBlKSk7XG4gICAgXG4gICAgcmV0dXJuIGNsaWVudDtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIFByaXNtYSBjbGllbnQ6JywgZSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufVxuXG4vLyBDaGVjayBpZiBhbiBlcnJvciBpcyByZXRyeWFibGVcbmZ1bmN0aW9uIGlzUHJpc21hUmV0cnlhYmxlRXJyb3IoZXJyb3I6IGFueSk6IGJvb2xlYW4ge1xuICAvLyBOZXR3b3JrIGVycm9yc1xuICBpZiAoZXJyb3IuY29kZSA9PT0gJ1AxMDAxJyB8fCBlcnJvci5jb2RlID09PSAnUDEwMDInKSByZXR1cm4gdHJ1ZTtcbiAgXG4gIC8vIENvbm5lY3Rpb24gZXJyb3JzXG4gIGlmIChlcnJvci5jb2RlID09PSAnUDEwMDgnIHx8IGVycm9yLmNvZGUgPT09ICdQMTAxMScpIHJldHVybiB0cnVlO1xuICBcbiAgLy8gVGltZW91dCBlcnJvcnNcbiAgaWYgKGVycm9yLmNvZGUgPT09ICdQMTAwOScpIHJldHVybiB0cnVlO1xuICBcbiAgLy8gTW9uZ29EQiB0cmFuc2llbnQgZXJyb3JzXG4gIGlmIChlcnJvci5tZXNzYWdlPy5pbmNsdWRlcygnTW9uZ29OZXR3b3JrRXJyb3InKSkgcmV0dXJuIHRydWU7XG4gIGlmIChlcnJvci5tZXNzYWdlPy5pbmNsdWRlcygnTW9uZ29TZXJ2ZXJTZWxlY3Rpb25FcnJvcicpKSByZXR1cm4gdHJ1ZTtcbiAgXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLy8gRW5zdXJlIHdlIG9ubHkgY3JlYXRlIHRoZSBjbGllbnQgb25jZVxubGV0IHByaXNtYUluc3RhbmNlOiBQcmlzbWFDbGllbnQ7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHByaXNtYUluc3RhbmNlID0gY3JlYXRlUHJpc21hQ2xpZW50KCk7XG59IGVsc2Uge1xuICAvLyBVc2UgZ2xvYmFsIGluIGRldmVsb3BtZW50IHRvIGF2b2lkIGR1cGxpY2F0ZXMgZHVyaW5nIGhvdCByZWxvYWRpbmdcbiAgaWYgKCFnbG9iYWwucHJpc21hKSB7XG4gICAgZ2xvYmFsLnByaXNtYSA9IGNyZWF0ZVByaXNtYUNsaWVudCgpO1xuICB9XG4gIHByaXNtYUluc3RhbmNlID0gZ2xvYmFsLnByaXNtYTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcHJpc21hSW5zdGFuY2U7XG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiTUFYX1JFVFJJRVMiLCJSRVRSWV9ERUxBWV9NUyIsImRlbGF5IiwibXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJjcmVhdGVQcmlzbWFDbGllbnQiLCJjbGllbnQiLCJsb2ciLCJwcm9jZXNzIiwiJHVzZSIsInBhcmFtcyIsIm5leHQiLCJyZXRyaWVzIiwiZXJyb3IiLCJjb25zb2xlIiwibW9kZWwiLCJhY3Rpb24iLCJpc1ByaXNtYVJldHJ5YWJsZUVycm9yIiwiTWF0aCIsInBvdyIsIiRjb25uZWN0IiwidGhlbiIsImNhdGNoIiwiZSIsImNvZGUiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJwcmlzbWFJbnN0YW5jZSIsImdsb2JhbCIsInByaXNtYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/db/prisma-client.ts\n"));

/***/ })

});